var tipuesearch = {"pages": [{'title': '各組期末報告說明', 'text': '', 'tags': '', 'url': '各組期末報告說明.html'}, {'title': '執行規劃', 'text': '', 'tags': '', 'url': '執行規劃.html'}, {'title': '手足球系統模擬', 'text': '專案成果摘要 \n 專案執行動機 \n 相關文獻探討 \n 專案執行成員 \n 執行使用套件 \n 專案執行過程規劃 \n 專案執行內容 \n 專案結論 \n', 'tags': '', 'url': '手足球系統模擬.html'}, {'title': '設計與繪圖', 'text': '', 'tags': '', 'url': '設計與繪圖.html'}, {'title': '零組件尺寸分析', 'text': '手足球系統的零組件尺寸分析 (可行性分析) \n', 'tags': '', 'url': '零組件尺寸分析.html'}, {'title': '參數設計與繪圖', 'text': '手足球系統的零組件參數設計與繪圖 (零組件初步設計繪圖) \n Onshape 零組件連結 \n 手足球初步設計 \n \n 送球機構初步設計 \n \n 手足球+送球機構完成圖 \n \n', 'tags': '', 'url': '參數設計與繪圖.html'}, {'title': '細部設計與 BOM', 'text': '手足球零件格式說明 \n 手足球零件格式說明 \n 零件 BOM \n 手足球零組件材料表 (含零組件下載連結) \n \n 零件尺寸圖 \n 零件尺寸圖 \n 零件18 20 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/d8734d77d2aa524b961cc1dc \n \n 零件19 21 22 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/8b4fbdf95f0f887de918ecf0 \n \n 零件23 24 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/76833e18618be1c72bc2f875 \n \n 零件25 26 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/e3cf1a9fa9d929307db3b5b0 \n \n 零件27 28\xa0 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/460154e29001c5a6945b03ea \n \n 零件31 32 33 34 35 \n https://cad.onshape.com/documents/5653844cc215c64eac3c06cf/w/5ad65bf78937d05897ff41fb/e/807f1281b94ddeaf4d20777d \n \n \n \n 零件部分組裝圖 \n 零件部分組裝圖 \n \n \n \n 3D 零組件爆炸圖 \n foosball - explosion \n \n foosball - explosion drawing \n \n Ball sending mechanism - explosion \n \n Ball sending mechanism - explosion drawing \n', 'tags': '', 'url': '細部設計與 BOM.html'}, {'title': 'V-rep 動態模擬', 'text': '', 'tags': '', 'url': 'V-rep 動態模擬.html'}, {'title': '送球機構設計與模擬', 'text': '初步設計送球 \n \n 送球機構設計(First) \n \n 送球機構設計(Second) \n \n 送球機構第一版 \n \n 送球機構第二版 \n \n 送球機構設計說明 \n \n 送球機構第一版模擬 \n \n', 'tags': '', 'url': '送球機構設計與模擬.html'}, {'title': '系統功能展示', 'text': '手足球模擬系統功能展示 (模擬展示與說明影片) \n foosball \n foosball people vs people \n foosball people vs ai \n left player simulation \n \n left and right player simulation \n \n left1 and 2 player simulation \n \n Foosball \n \n \n', 'tags': '', 'url': '系統功能展示.html'}, {'title': '結案報告', 'text': '', 'tags': '', 'url': '結案報告.html'}, {'title': '專案口頭簡報', 'text': '各組利用倉儲中的 Reveal.js 進行結案簡報 (結案口頭簡報) \n', 'tags': '', 'url': '專案口頭簡報.html'}, {'title': '專案報告書', 'text': '各組完成 html 與 pdf 格式之手足球專案結案報告 (文字結案報告書) \n', 'tags': '', 'url': '專案報告書.html'}, {'title': 'Mid-term Report', 'text': 'Mid-term-40623203 \n \n Mid-term-40623206 \n \n Mid-term-40623211 \n \n Mid-term-40623212 \n \n 期中報告缺少的過程補上 https://www.youtube.com/watch?v=xG5Y97qoo08&feature=youtu.be \n Mid-term-40623216 \n \n Mid-term-40623221 \n \n Mid-term-40623222 \n \n Mid-term-40623228 \n 期中報告 \n \n Mid-term-40623233 \n 期中報告影片 \n \n Mid-term-40623240 \n \n Mid-term-40623245 \n 期中報告影片 \n \n', 'tags': '', 'url': 'Mid-term Report.html'}, {'title': 'Introduction', 'text': 'Table Football motion simulation system \n 協同產品設計實習第一組 \n Github \n Blog \n Reveal \n ★Leader： \n 40623203 蔡宜芳 \n ★Member： \n 40623206\xa0 邱妍蓁\xa0   \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0   40623228\xa0 陳永錩 \n 40623211\xa0 王得榮  \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0   40623233\xa0 謝宗宏 \n 40623212\xa0 魏有泉  \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40623240\xa0 何冠均 \n 40623216\xa0 楊士平  \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0  40623245\xa0 練峪愷 \n 40623221\xa0 蔡和勳 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 40623222\xa0 蔡博淮 \n \n ★Assignments\xa0 : \n ⦿Onshape: \n 40623206\xa0 邱妍蓁\xa0 、 40623240\xa0 何冠均 \n ⦿V-rep\xa0simulation: \n 40623203 蔡宜芳\xa0 、 \xa040623228\xa0 陳永錩、 40623233\xa0 謝宗宏 \n ⦿Website\xa0maintain: \n \xa040623245\xa0 練峪愷、 \xa040623222\xa0 蔡博淮 \n ⦿Blog: \n 40623221\xa0 蔡和勳、 \xa040623216\xa0 楊士平\xa0 \n ⦿Slideshow: \n 40623212\xa0 魏有泉、 40623211\xa0 王得榮 \n ⦿Report: \n 40623211\xa0 王得榮', 'tags': '', 'url': 'Introduction.html'}, {'title': 'Onshape', 'text': '', 'tags': '', 'url': 'Onshape.html'}, {'title': 'Process', 'text': '一開始用Inventor畫草圖，設計出大概的樣子。 \n \n 組合出大概的樣子。 \n \n 在詢問老師後才知道底板規格是固定的，不能更改，所以直接用Onshape重新畫一個新的。 \n \n \n 組合的過程，因不想一直做重複的事情，所以用次組合。 \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Process.html'}, {'title': 'Complete', 'text': 'Table Football \n \n \n \n \n', 'tags': '', 'url': 'Complete.html'}, {'title': 'V-rep Tutorial', 'text': '', 'tags': '', 'url': 'V-rep Tutorial.html'}, {'title': 'BubbleRob', 'text': 'BubbleRob \n \n BubbleRob Tutorial simulation \n \n \n A.\xa0Add a primitive sphere \n 1.\xa0Add a primitive sphere to the scene with [Menu bar --> Add --> Primitive shape --> Sphere] \n \n 2.\xa0Diameter 0.2,\xa0adjust the X-size item to 0.2, then click OK.\xa0 \n \n 3. Enable Collidable, Measurable, Renderable and Detectable in the object common properties for that shape. \n \n 4. Click the sphere representing BubbleRob\'s body. \n 5. Click translation tab and enter 0.02 for Along Z. \n 6. Click Translate selection so that all selected objects by 2 cm along the absolute Z-axis. \n \n 7.\xa0Double-click the sphere\'s name, edit and enter bubbleRob and press enter. \n B. Add a proximity sensor \n 1. Select [Menu bar --> Add --> Proximity sensor --> Cone type] \n \n 2.\xa0 In the orientation dialog on the orientation tab, we enter 90 for Around Y and for Around Z, then click Rotate selection. \n \n 3.\xa0In the position dialog, on the position tab, we enter 0.1 for X-coord. and 0.12 for Z-coord. \n \n 4. Double-click the proximity sensor\'s icon in the scene hierarchy to open its properties dialog. \n 5. Click Show volume parameter to open the proximity sensor volume dialog. \n 6. Adjust items Offset to 0.005, Angle to 30 and Range to 0.15. \n \n 7. Click Show detection parameters in the proximity sensor properties, opens the proximity sensor detection parameter dialog. \n 8. Uncheck item Don\'t allow detections if distance smaller than then close that dialog again. \n \n 9. Double-click the proximity sensor\'s name, edit and enter bubbleRob_sensingNose and press enter. \n C. Attaches the sensor to the body of the robot \n 1.\xa0Select bubbleRob_sensingNose, then control-select bubbleRob \n 2.\xa0Click [Menu bar --> Edit --> Make last selected object parent] \n 1. + 2. => Can\xa0also drag bubbleRob_sensingNose onto bubbleRob in the scene hierarchy. \n \n D. Add BubbleRob\'s wheels \n 1.\xa0Add a pure primitive cylinder with [Menu bar --> Add --> Primitive shape --> Cylinder] \n \n 2.\xa0Dimensions (0.08,0.08,0.02) \n \n 3.\xa0Enable Collidable, Measurable, Renderable and Detectable in the object common properties for that cylinder. \n \n 4.\xa0Set the cylinder\'s absolute position to (0.05,0.1,0.04) \n 5.\xa0A bsolute orientation to (-90,0,0) \n 6.\xa0Change the name to\xa0 bubbleRob_leftWheel \n 7.\xa0Copy and paste the wheel \n 8.\xa0Set the absolute Y coordinate of the copy to -0.1 \n \n 9.\xa0R ename the copy to\xa0 bubbleRob_rightWheel \n E.\xa0A dd\xa0 j oints \xa0 (or motors) for the wheels \n 1.\xa0Click [Menu bar --> Add --> Joint --> Revolute] to add a revolute joint to the scene\xa0 \n \n 2.\xa0 Keep the joint selected, then control-select\xa0 bubbleRob_leftWheel \n 3.\xa0\xa0In the\xa0position dialog, on the\xa0position\xa0tab, we click the\xa0Apply to selection\xa0button: this positioned the joint at the center of the left wheel. \n \n 4.\xa0In the\xa0orientation dialog, on the\xa0orientation\xa0tab, we do the same: this oriented the joint in the same way as the left wheel. \n \n 5.\xa0Rename the joint to\xa0bubbleRob_leftMotor \n 6.\xa0Double-click the joint\'s icon in the scene hierarchy to open the\xa0joint properties\xa0dialog. \n 7.\xa0click\xa0Show dynamic parameters\xa0to open the\xa0joint dynamics propertiesdialog. \n 8. Enable the motor, and check item\xa0Lock motor when target velocity is zero. \n \n 9. Repeat the same procedure for the right motor and rename it to\xa0bubbleRob_rightMotor. \n \n \n \n 10. Attach the left wheel to the left motor. \n 11. Attach\xa0 the right wheel to the right motor. \n 12.\xa0Attach the two motors to\xa0bubbleRob. \n F.\xa0Add a small slider (or caster) \n 1.\xa0Add a pure primitive sphere with diameter 0.05 \n 2.\xa0E nter\xa0-0.07 for X-coord \n \n 3.\xa0Click\xa0the sphere Collidable, Measurable, Renderable and Detectable \n \n 4. Rename it to bubbleRob_slider \n 5. Set the Material to noFrictionMaterial in the shape dynamics properties \n G.\xa0Add a force sensor \n 1.\xa0 Click [Menu bar --> Add --> Joint --> Revolute] to add\xa0\xa0a force sensor \n \n 2.\xa0Rename it to bubbleRob_connection \n 3. E nter\xa0-0.07 for X-coord,\xa00.05 for Z-coord \n \n 4.\xa0Attach it to the robot body \n \n H.\xa0Avoid bubbleRob_slider and bubbleRob colliding with each other \n 1. In the shape dynamics properties, for bubbleRob_slider we set the local respondable mask to 00001111 \n \n 2.\xa0For bubbleRob, we set the local respondable mask to 11110000 \n \n I.\xa0Stability of dynamic simulations is tightly linked to masses and inertias of the involved non-static shapes. \n 1.\xa0Select the two wheels and the slider, and in the shape dynamics dialog we click three times M=M*2 (for selection) \n \n \n \n 2.\xa0All selected shapes will have their masses multiplied by 8 \n 3.\xa0Run the simulation again \n 4.\xa0In the joint dynamics dialog, we set the Target velocity to 50 for both motors. \n \n \n J.\xa0Define a collection of objects that represent BubbleRob \n 1.\xa0Click [Menu bar --> Tools --> Collections] to open the collection dialog or\xa0open the dialog by clicking the appropriate toolbar button \n \n 2.\xa0In the collection dialog, we click Add new collection. \n 3.\xa0Select bubbleRob in the scene hierarchy \n 4.\xa0Click Add in the collection dialog \n 5.\xa0Collection is now defined as containing all objects of the hierarchy tree starting at the bubbleRob object (the collection\'s composition is displayed in the Composing elements and attributes section) \n \n 6. To edit the collection name, we double-click it, and rename it to bubbleRob_collection.\xa0 \n K.\xa0Track the minimum distance between BubbleRob and any other object \n 1. Open the distance dialog with [Menu bar --> Tools --> Calculation module properties]\xa0or open the calculation module properties dialog with the appropriate toolbar button \n \n 2.\xa0In the distance dialog, click Add new distance object and select a distance pair: [collection] bubbleRob_collection\xa0- all other measurable objects in the scene. \n 3.\xa0Added a distance object that will measure the smallest distance between collection bubbleRob_collection (i.e. any measurable object in that collection) and any other measurable object in the scene. \n \n 4.\xa0Rename the distance object to bubbleRob_distance with a double-click in its name \n L.\xa0Add a graph \n 1.\xa0Click [Menu bar --> Add --> Graph] \n \n 2.\xa0Rename it to bubbleRob_graph \n 3.\xa0Attach the graph to bubbleRob \n 4.\xa0Set the graph\'s absolute coordinates to (0,0,0.005) \n \n 5.\xa0Open the graph properties dialog by double-clicking its icon in the scene hierarchy \n 6.\xa0Uncheck Display XYZ-planes \n 7.\xa0Click Add new data stream to record and select Object: absolute x-position for the Data stream type, and bubbleRob_graph for the Object / item to record \n 8.\xa0Data stream of bubbleRob_graph\'s absolute x-coordinate (i.e. the bubbleRobGraph\'s object absolute x position will be recorded).\xa0 \n 9.\xa0Record the y and z positions: we add those data streams in a similar way as above. \n 10.\xa0Click Add new data stream to record and select Distance: segment length for the Data stream type, and bubbleRob_distance for the Object / item to record \n 11.\xa0In the Data stream recording list, we now rename Data to bubbleRob_x_pos, Data0 to bubbleRob_y_pos, Data1 to bubbleRob_z_pos, and Data2 to bubbleRob_obstacle_dist. \n \n 12. Select bubbleRob_x_pos,\xa0bubbleRob_y_pos and bubbleRob_z_pos in the Data Stream recording list and in the Time graph properties section, uncheck Visible \n \n 13.\xa0Only the bubbleRob_obstacle_dist data stream will be visible in a time graph \n 14.\xa0Set-up a 3D curve that displays BubbleRob\'s trajectory \n 15.\xa0Click Edit 3D curves to open the XY graph and 3D curve dialog \n 16.\xa0Click Add new curve \n 17.\xa0In the dialog that pops open, we select bubbleRob_x_pos for the X-value item, bubbleRob_y_pos for the Y-value item and bubbleRob_z_pos for the Z-value item. \n \n 18. Rename the newly added curve from Curve to bubbleRob_path \n 19.\xa0Check the Relative to world item and set Curve width to 4 \n \n M.\xa0Add a pure primitive cylinder \n 1.\xa0 Add a pure primitive cylinder with [Menu bar --> Add --> Primitive shape --> Cylinder] \n \n 2.\xa0Dimensions: (0.1, 0.1, 0.2) \n 3.\xa0Click the object translation toolbar button \n \n 4.\xa0Drag any point in the scene: the cylinder will follow the movement \n 5.\xa0Copy and paste the cylinder a few times \n 6.\xa0Move them to positions around BubbleRob (it is most convenient to perform that while looking at the scene from the top) \n 7.\xa0During object shifting, holding down the shift key allows to perform smaller shift steps. Holding down the ctrl key allows to move in an orthogonal direction to the regular direction(s). \n 8.\xa0Select the camera pan toolbar button \n N.\xa0Finish BubbleRob as a model definition \n 1.\xa0Select the model base (i.e. object bubbleRob) \n 2.\xa0Check items Object is model base and Object/model can transfer or accept DNA in the object common properties: there is now a stippled bounding box that encompasses all objects in the model hierarchy. \n 3.\xa0Select the two joints, the proximity sensor and the graph, the proximity sensor and the graph \n 4.\xa0Don\'t show as inside model selection and click Apply to selection \n 5.\xa0The model bounding box now ignores the two joints and the proximity sensor \n 6.\xa0Disable camera visibility layer 2 \n 7.\xa0Enable camera visibility layer 10 for the two joints and the force sensor \n 8.\xa0This effectively hides the two joints and the force sensor, since layers 9-16 are disabled by default \n 9.\xa0Select the vision sensor, the two wheels, the slider, and the graph \n 10. Select base of model instead \n O.\xa0Add a vision sensor \n 1.\xa0Click [Menu bar --> Add --> Vision sensor --> Perspective type] \n \n 2.\xa0Attach the vision sensor to the proximity sensor \n 3.\xa0Set the local position and orientation of the vision sensor to (0,0,0) \n \n 4.\xa0Open its properties dialog \n 5.\xa0Set the Far clipping plane item to 1, and the Resolution x and Resolution y items to 256 and 256 \n \n 6.\xa0Open the vision sensor filter dialog by clicking Show filter dialog \n 7.\xa0Select the filter component Edge detection on work image and click Add filter \n 8. Position the newly added filter in second position (one position up, using the up button) \n \n 9.\xa0Double-click the newly added filter component and adjust its Threshold item to 0.2, then click OK \n \n P. Add a floating view to the scene, \n 1.\xa0Right-click [Popup menu --> View --> Associate view with selected vision sensor] (we make sure the vision sensor is selected during that process) \n \n \n Q. Add a small child script that will control BubbleRob\'s behavior \n 1.\xa0Click [Menu bar --> Add --> Associated child script --> Non threaded] \n \n 2.\xa0Opened with [Menu bar --> Tools --> Scripts] or through the appropriate toolbar button. \n \n 3.\xa0Double-click the little script icon that appeared next to bubbleRob\'s name in the scene hierarchy \n 4.\xa0Copy and paste following code into the script editor \n \n BubbleRob Program： \n function sysCall_init()\n    -- do some initialization here:\n\n    -- Make sure you read the section on "Accessing general-type objects programmatically"\n    -- For instance, if you wish to retrieve the handle of a scene object, use following instruction:\n    --\n    -- handle=sim.getObjectHandle(\'sceneObjectName\')\n    -- \n    -- Above instruction retrieves the handle of \'sceneObjectName\' if this script\'s name has no \'#\' in it\n    --\n    -- If this script\'s name contains a \'#\' (e.g. \'someName#4\'), then above instruction retrieves the handle of object \'sceneObjectName#4\'\n    -- This mechanism of handle retrieval is very convenient, since you don\'t need to adjust any code when a model is duplicated!\n    -- So if the script\'s name (or rather the name of the object associated with this script) is:\n    --\n    -- \'someName\', then the handle of \'sceneObjectName\' is retrieved\n    -- \'someName#0\', then the handle of \'sceneObjectName#0\' is retrieved\n    -- \'someName#1\', then the handle of \'sceneObjectName#1\' is retrieved\n    -- ...\n    --\n    -- If you always want to retrieve the same object\'s handle, no matter what, specify its full name, including a \'#\':\n    --\n    -- handle=sim.getObjectHandle(\'sceneObjectName#\') always retrieves the handle of object \'sceneObjectName\' \n    -- handle=sim.getObjectHandle(\'sceneObjectName#0\') always retrieves the handle of object \'sceneObjectName#0\' \n    -- handle=sim.getObjectHandle(\'sceneObjectName#1\') always retrieves the handle of object \'sceneObjectName#1\'\n    -- ...\n    --\n    -- Refer also to sim.getCollisionhandle, sim.getDistanceHandle, sim.getIkGroupHandle, etc.\nend\n\nfunction sysCall_actuation()\n    -- put your actuation code here\n    --\n    -- For example:\n    --\n    -- local position=sim.getObjectPosition(handle,-1)\n    -- position[1]=position[1]+0.001\n    -- sim.setObjectPosition(handle,-1,position)\nend\n\nfunction sysCall_sensing()\n    -- put your sensing code here\nend\n\nfunction sysCall_cleanup()\n    -- do some clean-up here\nend\n\n-- You can define additional system calls here:\n--[[\nfunction sysCall_suspend()\nend\n\nfunction sysCall_resume()\nend\n\nfunction sysCall_dynCallback(inData)\nend\n\nfunction sysCall_jointCallback(inData)\n    return outData\nend\n\nfunction sysCall_contactCallback(inData)\n    return outData\nend\n\nfunction sysCall_beforeCopy(inData)\n    for key,value in pairs(inData.objectHandles) do\n        print("Object with handle "..key.." will be copied")\n    end\nend\n\nfunction sysCall_afterCopy(inData)\n    for key,value in pairs(inData.objectHandles) do\n        print("Object with handle "..key.." was copied")\n    end\nend\n\nfunction sysCall_beforeDelete(inData)\n    for key,value in pairs(inData.objectHandles) do\n        print("Object with handle "..key.." will be deleted")\n    end\n    -- inData.allObjects indicates if all objects in the scene will be deleted\nend\n\nfunction sysCall_afterDelete(inData)\n    for key,value in pairs(inData.objectHandles) do\n        print("Object with handle "..key.." was deleted")\n    end\n    -- inData.allObjects indicates if all objects in the scene were deleted\nend\n--]]\nfunction speedChange_callback(ui,id,newVal)\n    speed=minMaxSpeed[1]+(minMaxSpeed[2]-minMaxSpeed[1])*newVal/100\nend\n\nfunction sysCall_init()\n    -- This is executed exactly once, the first time this script is executed\n    bubbleRobBase=sim.getObjectAssociatedWithScript(sim.handle_self) -- this is bubbleRob\'s handle\n    leftMotor=sim.getObjectHandle("bubbleRob_leftMotor") -- Handle of the left motor\n    rightMotor=sim.getObjectHandle("bubbleRob_rightMotor") -- Handle of the right motor\n    noseSensor=sim.getObjectHandle("bubbleRob_sensingNose") -- Handle of the proximity sensor\n    minMaxSpeed={-50*math.pi/180,300*math.pi/180} -- Min and max speeds for each motor\n    backUntilTime=1 -- Tells whether bubbleRob is in forward or backward mode\n    -- Create the custom UI:\n        xml = \'<ui title="\'..sim.getObjectName(bubbleRobBase)..\' speed" closeable="false" resizeable="false" activate="false">\'..[[\n        <hslider minimum="0" maximum="100" onchange="speedChange_callback" id="1"/>\n        <label text="" style="* {margin-left: 300px;}"/>\n        </ui>\n        ]]\n    ui=simUI.create(xml)\n    speed=(minMaxSpeed[1]+minMaxSpeed[2])*0.5\n    simUI.setSliderValue(ui,1,100*(speed-minMaxSpeed[1])/(minMaxSpeed[2]-minMaxSpeed[1]))\nend\n\nfunction sysCall_actuation()\n    result=sim.readProximitySensor(noseSensor) -- Read the proximity sensor\n    -- If we detected something, we set the backward mode:\n    if (result>0) then backUntilTime=sim.getSimulationTime()+4 end \n\n    if (backUntilTime<sim.getSimulationTime()) then\n        -- When in forward mode, we simply move forward at the desired speed\n        sim.setJointTargetVelocity(leftMotor,-speed)\n        sim.setJointTargetVelocity(rightMotor,-speed)\n    else\n        -- When in backward mode, we simply backup in a curve at reduced speed\n        sim.setJointTargetVelocity(leftMotor,speed/2)\n        sim.setJointTargetVelocity(rightMotor,speed/8)\n    end\nend\n\nfunction sysCall_cleanup()\n\tsimUI.destroy(ui)\nend \n Finish \n', 'tags': '', 'url': 'BubbleRob.html'}, {'title': 'V-rep Table Football', 'text': '', 'tags': '', 'url': 'V-rep Table Football.html'}, {'title': 'Left player', 'text': 'Onshape \n Foosball：left player simulation \n \n Left Player Program： \n -- model in Solvespace 500 mm = 5000 mm in V-rep\n--[[\nSimulation is 10 times of realistic environment\nfloor in Solvespace 2.5 m x 2.5 m = 25 m x 25 m in V-rep\nball is in Solivespace 1g (0.001) = 0.01 kg in V-rep\nhammer is in Solvespace 0.1 kg (100g) = 1kg in V-rep (0.1 for Inertia)\n]]\n\nthreadFunction=function()\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do\n        -- Read the keyboard messages (make sure the focus is on the main window, scene view):\n        message,auxiliaryData=sim.getSimulatorMessage()\n        while message~=-1 do\n            if (message==sim.message_keypress) then\n                if (auxiliaryData[1]==119) then\n                    -- up key\n                    velocity=100\n                    torque=200\n                    hammer_back = 0\n                end\n                if (auxiliaryData[1]==115) then\n                    -- down key\n                     hammer_back = 1\n                     torque=-200\n                     velocity = -100\n                end\n                if (auxiliaryData[1]==97) then\n                    -- right key\n                     sliding = sliding + 0.005\nsim.addStatusbarMessage(\'sliding:\'..sliding)\n                \n                end\n                if (auxiliaryData[1]==100) then\n                    -- left key\n                     sliding = sliding - 0.005\nsim.addStatusbarMessage(\'sliding:\'..sliding)\n                end\n            end\n            message,auxiliaryData=sim.getSimulatorMessage()\n        end\n \n        -- We take care of setting the desired hammer position:\n        if hammer_back == 1\n            then \n               sim.setJointPosition(joint, -1, orientation)\n               --sim.setObjectPosition(hammer, -1, position)\n        end\n        sim.setJointTargetPosition(joint, velocity)\n        --sim.setJointForce(joint,torque)\n        sim.setJointTargetPosition(slider, sliding)\n\n        -- Since this script is threaded, don\'t waste time here:\n        sim.switchThread() -- Resume the script at next simulation loop start\n    end\nend\n-- Put some initialization code here:\n-- Retrieving of some handles and setting of some initial values:\njoint=sim.getObjectHandle(\'left_joint\')\nhammer=sim.getObjectHandle(\'left_player\')\nslider=sim.getObjectHandle("left_slider")\nvelocity=0\nhammer_back=0\ntorque=0\nsliding = 0\norientation=sim.getJointPosition(joint, -1)\nposition=sim.getObjectPosition(hammer, -1)\nslider_position=sim.getJointPosition(slider, -1)\n-- Here we execute the regular thread code:\nres,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)\nif not res then\n    sim.addStatusbarMessage(\'Lua runtime error: \'..err)\nend\n \n-- Put some clean-up code here: \n Foosball：left player finish simulation \n \n', 'tags': '', 'url': 'Left player.html'}, {'title': 'Progress', 'text': '', 'tags': '', 'url': 'Progress.html'}, {'title': '03', 'text': '\n \n \n week1 \n \n \n Create a Windows 64-bit portable program system \n \n \n \n \n week2 \n \n \n 228\xa0Peace Memorial Day \n \n \n \n \n week3 \n \n \n Introduce the setting and use of ungit \n Random grouping \n Determine the team member \n \n \n \n \n week4 \n \n \n Build a  website \n \n \n \n \n week5 \n \n \n Assignment work \n Research BubbleRob tutorial \n Make BubbleRob tutorial Operation Manual \n \n \n \n \n week6 \n \n \n BubbleRob.ttt simulation file \n \n \n \n \n week7 \n \n \n Tomb Sweeping Day \n \n \n \n \n week8 \n \n \n Video： BubbleRob tutorial \n \n \n \n \n week9 \n \n \n Mid - term Report \n \n \n \n \n week10 \n \n \n Research foosball simulation ： People to people \n Foosball： left player \n Video： left player \n Video： left player finish \n \n \n \n \n week 11 \n \n \n Research foosball simulation ： People to people \n Video： left and right player \n \n \n \n \n week 12 \n \n \n Research foosball simulation ： People to people \n Video： left1 and 2 player \n \n \n \n \n week 13 \n \n \n Research foosball simulation ： People to people \n Video： Foosball \n \n \n \n \n \n', 'tags': '', 'url': '03.html'}, {'title': '06', 'text': '\n \n \n week1 \n 製作可攜程式 \n \n \n week2 \n 228連假 \n \n \n week3 \n 介紹ungit的設定與使用與亂數分組 \n \n \n week4 \n \n 亂數分組完畢，確定組員 \n 建立網站 \n \n \n \n week5 \n \n 分配工作 \n Table Football \xa0繪製草圖 \n \n \n \n week6 \n Table Football \xa0繪製完成 \n \n \n week7 \n 清明節放假 \n \n \n week8 \n \n 模擬BubbleRob tutorial \n BubbleRob tutorial \n \n \n \n week9 \n 期中報告 \n \n \n week10 \n \n 試做一部分的Building a clean model tutorial \n A part of Building a clean model tutorial \n \n \n \n week11 \n \n 初始設計 \n 第一次機構設計 \n 送球機構設計(影片) \n \n \n \n week12 \n \n 送球機構設計第一版 \n 送球機構設計第二版 \n \n \n \n week13 \n \n - \n \n \n \n week14 \n 送球機構設計說明 \n \n \n week15 \n - \n \n \n week16 \n foosball - explosion drawing \n \n \n \n', 'tags': '', 'url': '06.html'}, {'title': '11', 'text': '', 'tags': '', 'url': '11.html'}, {'title': '12', 'text': '', 'tags': '', 'url': '12.html'}, {'title': '16', 'text': '', 'tags': '', 'url': '16.html'}, {'title': '21', 'text': '', 'tags': '', 'url': '21.html'}, {'title': '22', 'text': 'v-rep_foosball_playerV.S.player \n \n', 'tags': '', 'url': '22.html'}, {'title': '28', 'text': 'mdecourse/cd2019 \n \n', 'tags': '', 'url': '28.html'}, {'title': '33', 'text': '\n \n \n week11 \n \n 模擬範例foosball v-rep\xa0 \n https://github.com/mdecadp2018/site-40623233/tree/gh-pages/%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88%E5%AF%A6%E7%BF%92/week11 \n \n \n \n \n week12 \n \n \n 模擬foosball v-rep \n https://github.com/mdecadp2018/site-40623233/tree/gh-pages/%E5%8D%94%E5%90%8C%E7%94%A2%E5%93%81%E8%A8%AD%E8%A8%88%E5%AF%A6%E7%BF%92/week12 \n \n \n \n week13 \n \n 模擬foosball人對人 v-rep\xa0 \n https://www.youtube.com/watch?v=SKG3qTLmCg8 \xa0 \n \n \n \n week14 \n \n 模擬foosball人對電腦 v-rep\xa0 \n https://www.youtube.com/watch?v=N7EU_EU8ffA \n \n \n \n \n week15 \n \n \n 模擬foosball人對電腦 v-rep part1 \n https://www.youtube.com/watch?v=6GkOuQO9oxA \n \n \n \n \n week16 \n \n \n 模擬foosball人對電腦 v-rep part2 \n https://www.youtube.com/watch?v=xBZ33kvd8uI&t=1s \n \n \n \n', 'tags': '', 'url': '33.html'}, {'title': '40', 'text': '', 'tags': '', 'url': '40.html'}, {'title': '45', 'text': '', 'tags': '', 'url': '45.html'}, {'title': 'Experience', 'text': '', 'tags': '', 'url': 'Experience.html'}, {'title': '40623203', 'text': 'week1 \n 從大一用到現在的可攜程式系統，一直都是老師事先製作完成後讓我們熟悉裡面的配置如何運用，都沒有仔細的去了解它是如何製作的，不過老師在這學期一開始的時候，就教導我們如何自行製作一個屬於並符合自己需求的一套 可攜程式系統，先照著老師的步驟一步步組裝，了解基本配備，他需要下載不同的軟體並且互相配合，才能夠執行，還需要在版本更新時，更換版本，使得自己的可攜程式系統越來越科技化，越來越好用，也不會因為版本的問題，造成無法跟其他系統做配合。在建立完成後，就可以用它來完成這學期的課程。 \n week2 \n 這週是228和平紀念日的連假，我們在上一週已經將課補上完畢，因此我在放假期間補齊老師在上禮拜交的並複習和整合，才能緊跟老師的腳步，前進下一週。 \n 228 Peace Memorial Day \n \n 出處 \n week3 \n week4 \n week5 \n week6 \n week7 \n Tomb Sweeping Day \n \n \n 出處 \n week8 \n week9 \n week10 \n 我在這一週研究如何用 V-rep 模擬手足球，先按照老師提供的資訊，做一個基礎版，再慢慢研究，並增加其他功能，使手足球模擬起來更順暢，功能也更加的多。在模擬的時候遇到很多瓶頸，儘管在之前已經研究過 BubbleRob ，但還是不熟悉它的功能，摸索了很久，終於慢慢抓到重點，模擬出一個人手足球員在場地上作動及控制。 \n week11 \n 這一週繼續延續上一週的模擬，研究如何使左右各一的 手足球員用不同的按鍵作動，使其能夠互相對打，原本我是想要將程式寫在主體 ( Table ) 上，但因為一些問題，所以作動起來有點問題，還有寫同一個程式中，程式變得很長且很亂，所以我就將它拆開分別放在零件的作動軸上，變得簡單和清楚，需要修改時，也能一眼看出問題。 \n week12 \n 我在這週研究怎麼將兩根桿子上的手足球員在程式編寫和按按鍵一起作動，還有限制距離，使他不用在超過的範圍中繼續增加下去，能夠立刻返回到需要的位置踢球。剛開始在編寫的時候一直出錯，找了很久還是沒有找到問題，直到靜下心來慢慢的研究，終於發現原來是少給指令，才導致無法執行程式，經過一而再，再而三的嘗試，終於成功模擬出來了。 \n week13 \n 這週因為在上一週時，已經了解如何兩組兩組一起作動，因此在手足球人對人的模擬中， 模擬 得很順利。下一週要開始模擬送球機構了，我們這組在手足球檯的正中間，繪製一個升降梯，讓球在進洞後，能順利地回到球場。在期中考前，繪製手足球時，和組員討論應該如何繪製比較好時，我曾跟隊友提出，當球進洞時，可以利用和搭配一些機構，使球回到球場，沒想到當天馬行空的想像，居然真的實行了，讓球能夠在進洞後回到球場中央。 \n', 'tags': '', 'url': '40623203.html'}, {'title': '40623206', 'text': 'week1 \n 用了很久的可攜式系統在這學期要自己創建，體驗如何製作一個可攜式系統，跟著老師的步驟做，一步一步的去拼湊它，才發現它需要下載很多程式，再慢慢的連結各項功能，建立出屬於自己的開發環境，使它可以幫助自己完成這學期的工作 \n week2 \n 由於228連假，把課補到第一週上完。在第一週快下課前沒有做完的東西把它補好，以便下個禮拜能跟上老師的進度 \n week3 \n 在這週學到如何利用程式亂數分組以及ungit，在不熟的情況下如何把東西成功的展現出來，不知道自己的組員有誰，好幾次執行之後，以為這次就會確定組員，但結論是到下週才知道結果，每一次的執行都讓人覺得刺激 \n week4 \n 經過緊張又刺激的分組後，已經確定組員，由於之前都是老師已經把網站架設好讓我們使用，這次是網站要自己弄出來，在一個空的倉儲裡如何建立網站，一開始有點不知道怎麼下手，理解之後才發現其實不難 \n week5 \n 這週分配工作，確定每個組員要做的事情，我被分配到的工作是畫圖，由於上學期對Onshape不熟，所以先用Inventor畫出他的樣子再慢慢修改，原本因為美觀把底版加長，詢問老師之後才知道網站上的手足球平面圖是比賽規格，不能更動，所以直接用Onshape重畫一個 \n week6 \n 在用Onshape繪製的過程中，遇到了一點問，詢問同學之後才知道，繪製零件時，如果同時擠出分開的實體，內建會自動分成多實體，最後在用Boolean的Union把所有實體合併在一起。組合每個零件時也遇到一些問題，花了一點時間去研究，摸索他的功能，才發現Onshape的組合比Inventor好用。組裝過程中，為了避免桿子在移動時，整個超出手足球的側板，我約束了他的前後移動範圍，也測試桿子會不會太短導致撞到側板，終於把手足球完成了 \n \n week7 \n 清明連假 \n week8\xa0 \n 這週上課做了BubbleRob tutorial，因為還不熟悉裡面的功能，邊看邊做的時候常常因為找不到而一直請教同學功能在那裡，一開始做總是比較難，希望之後能順利的完成後面的東西 \n \n 在模擬的過程中少了一些步驟，導致我的東西只會往後走 \n \n 重做一個才發現其實自己少了很多步驟，終於把它成功完成了 \n \n BubbleRob tutorial \n week9 \n 期中打自評成績，並報告第一週到第八週所作內容 \n week10 \n 這週我開始模擬新的tutorial，也找不太到這個的重點，做了前面的一些些，原本一直失敗，後來才發現功能都是分開的，彼此之間沒有關聯，一開始以為可以直接在V-rep叫零件，可能可以只是還沒找到，所以在Onshape畫一個類似的零組件去模擬，希望後面可以把它完成 \n week11 \n', 'tags': '', 'url': '40623206.html'}, {'title': '40623211', 'text': 'week1 \n 第一週是把自隨身碟製作一個可攜式系統，並且下載很多程式來方便本學期上課用，之後慢慢整理出自己的環境。 \n week2 \n 228連假 \n week3 \n 老師利用程式進行分組，並且個人整理隨身碟，下週將會知道組員有誰! \n week4 \n 看著組員各個都非常厲害，深深的覺得自己也要加強，才能跟上大家的進度。 \n week5 \n 分組結果我的工作室報告製作和上台報告，上台報告的人需要非常清楚的了解大家工作的內容，並且熟悉自己製作的報告內容，這樣才能具體地描繪出我們的作品。 \n week6 \n 看著手足球已經設計完成，真的非常厲害，也畫得非常細，然後互評要一個一個人打說真的是蠻麻煩的。 \n week7 \n 放假~~~~~ \n week8 \n 期中考前的準備，趕快整理自己的東西，並且製作ppt，以便下週錄影和報告時使用。 發現我的隨身碟不見，下週就要報告了，要趕快買一個然後備份。 \n week9 \n 期中簡報: \n https://mdecadp2018.github.io/site-40623211/reveal/#/ \n week10 \n 期中考剛結束，很快的新的進度出現，看著同學的模擬，自我也學到很多。 \n week11 \n 跟同學協調工作內容，並且把本分給做好。 \n week12 \n v-rep足球用老師提供的板模進行模擬。 \n week13 \n 這週進行期末專案的分組，我被分配到畫bom圖。 \n week14 \n 開始將零件一一畫出，並且錄製影片，上傳至youtube。 \n', 'tags': '', 'url': '40623211.html'}, {'title': '40623212', 'text': 'week1 \n 我們在上課做出屬於自己的可攜程式放入我們自己的隨身碟，以便於我們往後上課進行老師的要求的任務。與之前老師給我們的可攜系統不同的地方是我們這次都由自己做出，自己打造自己的環境。 \n week2 \n 因為二二八彈性放假，所以在晚上進行補課，一天連上8堂課以至於許多東西都一次性下來有點吸收不好，希望下周前可以將進度補齊。 \n week3 \n 上課中利用老師的亂數分組的程式碼進行班上亂數分組，雖然老師多次都說就決定是這次的分組名單，但最後分了5次，卻還是說分組留到下周進行，使我既期待又害怕的等待分組名單。 \n week4 \n 今天終於將分組確定了，然後老師要求我們將組別的Github領取完成並且將組員都加入組別裡，起初老師說不要讓倉儲空無一物，要放點東西進去，經過太久，之前我們如何放入東西到組別倉儲都忘了，但經由老師檢查且提醒我們，才使我又想起如何建立內容。 \n week5 \n 分配了工作，我的工作分配到了維護簡報，然而大家做完的東西，最後要經由報告呈現出，使得簡報的重要度不亞於其他的比重，我會更加認真的對待自己組別的簡報。 \n week6 \n 這週在等待組員的部分進展，再將它們一一呈現在簡報上，以至於至此週簡報部分只有開頭，但內容還缺乏。 \n week7 \n ~清明節連假~ \n week8 \n 在一週就要期中了，上課老師說了期中的作法，老師若不提前先說明中考的內容，我可能會在期中考周當天戰戰兢兢的。 \n week9 \n', 'tags': '', 'url': '40623212.html'}, {'title': '40623216', 'text': 'week1 \n 第一周把隨身碟加入自己的可攜程式，在之後的操作上會比較方便，然後可攜程式都是自己一步一步做出來的。 \n week2 \n 中秋連假 \n \n week3 \n 這週老師用程式來進行亂數分組，在不知道跟誰同組的情況下，大家都很緊張會被分到哪組，分完組別後，開始分配工作。 \n week4 \n 這次的網站是要從無到有每個組員合力創建出來，然後討論如何做出手足球並用V-rep進行模擬，之前對V-rep只會一點點，這學期需要大量用到V-rep，所以會花很多時間在這上面，慢慢去熟悉。 \n week5 \n 開始分配工作，部落格網站整理及更新，這項工作比起畫圖跟模擬簡單些，所以需要把部落格做得更好。 \n week6 \n 這週組員有模擬出來了，然後就去詢問他們是如何做出來的，並自己去嘗試看看。 一開始做完時，輪子無法驅動球體一起前進，然後從別人的影片去看自己是哪裡做錯，是不是驅趕和輪子沒有結合定義到，重新在做一次後就可以移動了。 \n \n https://youtu.be/aSE2kwKC-iU \n https://youtu.be/ecleZxAh0ZQ \n \n \xa0 \xa0 \xa0模擬完成 \n \n https://youtu.be/wik059-PFx0\xa0 \xa0 \n \n week7 \n ~清明節連假~ \n week8 \n 這禮拜老師講了期中考要做的東西，讓我們提前準備。 \n week9 \n', 'tags': '', 'url': '40623216.html'}, {'title': '40623221', 'text': 'week1 \n 可攜式系統要自己創建，學習如何製作一個可攜式系統，跟著老師的腳步，發現它需要下載很多程式，再慢慢新增，建立出屬於自己的隨身系統這樣才可以完成這學期的作業。 \n week2 \n 在禮拜一補完課，老師的教學影片讓我們能更加瞭解自己的可攜式系統內部的東西。 \n week3 \n 認識亂數分組，將班上修課名單利用亂數分組，讓系統編排各組學員。 \n week4 \n 這週分組名單已經出爐了，也選出組長，也順利進入github的協同。 \n \n week5 \n 分配工作後我們都已經知道自己的工作，接著一起完成整組的成品，在編輯部落格的時候，因為leo的路徑用錯，詢問組後，可以順利上傳。 \n week6 \n 老師教了v-rep模擬，回去後我們組也有組員順利模擬出來，雖然對模擬很生疏，但有組員能教，而且也多學了不少。 \n \n week7 \n ~清明節連假~ \n week8 \n 先了解下週期中考內容，第一節要先利用share X，錄製自己在1到八週作的內容(5分鐘內)，第二節在依照學號上去口頭報告。 \n week9 \n 終於把vrep的bubblerob模擬出來了。 \n \n https://youtu.be/IzLg7OFvLB4 \n \n', 'tags': '', 'url': '40623221.html'}, {'title': '40623222', 'text': 'week1 \n 老師介紹了亂數分組的程式碼並解說其中的運作原理， 也示範了他的實際應用。 這學期要自己做出一直以來一直使用的可攜系統，實際做了之後才知道，可攜系統在使用的時候，需要載入許多程式。 \n week2 \n 228放假 自行在家將可攜系統做完整 \n week3 \n 學習ungit的使用方法 \n \n https://youtu.be/M8RF-dPXzHs \n https://youtu.be/t4PslV5Abjs \n https://youtu.be/1O0WgN7Y3zI \n \n week4 \n 分組名單出爐，並且也把分組工作確定，我是負責網站維護工作 \n week5 \n 分配工作後我們都已經知道自己的工作，接著一起完成整組的成品，在編輯部落格的時候，因為leo的路徑用錯，詢問組後，可以順利上傳。 \n week6 \n 老師教了v-rep模擬，回去後我們組也有組員順利模擬出來，雖然對模擬很生疏，但有組員能教，而且也多學了不少。 \n week7 \n ~清明節連假~ \n week8 \n 這禮拜將各方面資料進行統整，以便在期中考時進行報告。 \n BubbleRob模擬 \n \n https://youtu.be/ZdR0JOCycR8 \n \n week9 \n 期中考週 \n', 'tags': '', 'url': '40623222.html'}, {'title': '40623228', 'text': 'week1 \n 第一周 \n 任務:從零開始製作個人隨身系統 \n 老師的參考影片 \n 建立 Windos 646位元 可攜式系統教學影片: \n \n https://youtu.be/uEq_GtkkPx8 \n \n ungit說明影片 \n \n https://youtu.be/chp0B_kJRTc \n \n week2 \n 228放假\xa0 \n week3 \n 任務: 在可攜程式系統中配置ungit \n 老師的參考影片 \n \n https://youtu.be/lB-spECfhr8 \n https://youtu.be/ojydOkBXuxQ \n \n 說明如何利用 ungit 在倉儲個提交點設定 tag, 然後利用 git checkout 指令帶出各版本內容 \n \n https://youtu.be/MB4ELQJje_A \n \n week4 \n 任務:熟悉ungit使用 \n 老師的參考影片 \n 說明如何在 IPv6 環境下使用 git 指令 \n \n https://youtu.be/M8RF-dPXzHs \n \n 說明如何在可攜程式系統中加上 ungit, 以圖形化介面處理 git 指令 \n \n https://youtu.be/1O0WgN7Y3zI \n \n 說明如何利用 ssh 與 private key 對 Github 倉儲提交推送 \n \n https://youtu.be/t4PslV5Abjs \n \n week5 \n 任務:理解ssh協定 \n 老師的參考影片 \n 說明如何以 ssh 協定對 Github 倉儲改版 \n \n https://youtu.be/ZE5FkCWSi58 \n \n 說明如何編輯 git credential 設定, 以及利用 config 設定因應 Github 多帳號下的 ssh 連線 \n \n https://youtu.be/qZkmoeZHT1E \n \n week6 \n 任務: \n 1.理解 課程內容摘要 \n 2. V-rep 導引實習任務練習V-rep \n 老師的參考影片 \n 第六週透過未來工作發展趨勢說明課程內容摘要 \n \n https://youtu.be/QKLAJn8orcs \n \n V-rep 導引 (實習任務二 BubbleRob \n \n https://youtu.be/t86-dGOj7tU \n \n week7 \n ~清明節連假~ \n week8 \n 任務:理解 協同產品設計流程的教育目標 \n 老師的參考影片 \n 說明協同產品設計流程的教育目標 \n \n https://youtu.be/5DhHkzNq0bk \n \n week9 \n 實習任務一 可攜程式系統(已完成) \n 實習任務二 \n BubbleRob(已完成) \n \n BubbleRob(已完成) \n \n', 'tags': '', 'url': '40623228.html'}, {'title': '40623233', 'text': 'week1 \n 這學期第一堂課因為228放假所以就直接上八節課真的是上的很痛苦阿，再加上這學期要自己建立可攜系統，跟著老師的步驟一步步的來完成，剛開始需要下載很多東西也需要慢慢的將所需之程式做連接以便之後需要，自己建立完才發現其實沒那麼簡單要學的東西還很多。 \n week2 \n 228連假 \n \n \xa0 \n week3 \n 這學期新教了一個東西較ungit，這個東西相較於之前的新增和資料的推送有點不太一樣，ungit可以很簡單也很快速地將東西傳送到倉儲裡面，也可以將資料做樹狀圖的方式合併，ungit也不一定要開github內的commit來確認有無推送至倉儲內，雖然看起來很方便但還是要看自己比較習慣使用哪個才是最重要的。 \n week4 \n 這次的分組是由老師隨機分組，分完組後並自己架設網站和討論如何做出手足球和進行v-rep模擬，之前對v-rep還不是很了解和也只有稍微碰一下而已，藉由這次的手足球來加以練習這個模擬軟體，最重要的是v-rep都是英文所以操作起來不是很順利和熟練，所以必須要再加以練習才行。 \n week5 \n 分配組員大致上的工作並討論要如何製作手足球。 \n week6 \n 這練習BubbleRob tutorial的v-rep模擬，剛開始在座的時候還不是那麼的熟悉，但是至少有操作流程但沒想到都是英文，所以在操作過程中要一直查單字，而且在操作過程中還會一直操作錯誤，主要的原因還是因為有些敘述看不太懂所以才會一直做錯，但是也藉由這次的練習讓我增加了一些英文的閱讀能力，以及還有很多東西需要花時間研究才行。 \n week7 \n 清明節放假 \n week8 \n 練習用v-rep做BubbleRob \n \n https://youtu.be/xm7IcaD_poQ \n \n week9 \n BubbleRob v-rep模擬過程 \n \n https://youtu.be/FOu3qrGHQjU \n \n', 'tags': '', 'url': '40623233.html'}, {'title': '40623240', 'text': 'week1 \n 第一週用自己的可攜系統，有點不清楚要做什麼，所以去請教了解的同學幫助我完成了自己的環境。這次又是新的東西，但是基本上都跟上學期學到的東西類似，可以跟上老師的進度。 \n week2 \n 228連假 \n week3 \n 第三週分組討論分配工作，我分配到的是和上學期一樣的使用onshape畫圖部分，這次的比上次的不了，這次組員比較多所以需要話時間討論內容，希望可以順利完成圖。 \n week4 \n 經過隨機分組後，這次網站要自己建立從沒有到有，需要大家集思廣益，如何去用好網站，只是比之前多一點步驟而已，經過大家討論後，網站的基本架構慢慢成形了，每組的進度也要開始了。 \n week5 \n 分配到的組別是畫圖，Onshape是英文版不太熟悉但是有用過Solidwork所以上面的圖示基本是一樣或是類似的，我們必須了解自己要設計的產品，這樣才能畫出好的圖檔，會跟同學好好的討論並且繪出我們的Onshape。 \n week6 \n 模擬部分是不太熟悉的部分，所以要花更多時間去探索，常常會遇到困難，就只能請教比較厲害的同學去跟他學習，手足球也差不多完成了，每週的自評互評也開始了，必須更加的認真了。 \n week7 \n 春節連假...... \n week8 \n 了解下禮拜期中考週要準備的東西，先用share X記錄這半學期我們這組所做的東西至多五分鐘的影片，在以組別方式依序上台報告。 \n week9 \n', 'tags': '', 'url': '40623240.html'}, {'title': '40623245', 'text': 'week1 \n 第一堂學的是之前使用的可攜系統在這一堂學習如何去建立自己想要的系統，跟著老師的步驟做也發現需要下載一些程式，再去做統整，使他可以變成一個完整的系統。 \n week2 \n 這禮拜是２２８放假 \n week3 \n week4 \n week5 \n week6 \n week7 \n week8 \n week9 \n', 'tags': '', 'url': '40623245.html'}, {'title': 'Attend', 'text': '\xa0●\xa0 :\xa0 \xa0正常出席 \n \xa0○\xa0 :\xa0 \xa0缺席 \xa0 \n △:\xa0 \xa0病假、事假 \n ❂:\xa0 \xa0國定假日 \n \n \n \n 組員 \n 2/22 \n 3/01 \n 3/08 \n 3/15 \n 3/22 \n 3/29 \n 4/05 \n 4/12 \n 4/19 \n 4/26 \n 5/03 \n 5/10 \n 5/17 \n 5/24 \n 5/31 \n \n \n 40623203 蔡宜芳 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623206邱妍蓁 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623211王得榮 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ○ \n \n \n \n \n \n \n 40623212魏有泉 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623216楊士平 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623221蔡和勳 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ○ \n \n \n \n \n \n \n 40623222蔡博淮 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623228陳永錩 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623233謝宗宏 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ● \n \n \n \n \n \n \n 40623240何冠均 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ● \n ○ \n \n \n \n \n \n \n 40623245練峪愷 \n ● \n ● \n ● \n ● \n ● \n ● \n ❂ \n ● \n ● \n ○ \n ● \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Attend.html'}]};